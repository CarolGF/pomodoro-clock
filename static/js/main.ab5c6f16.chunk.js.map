{"version":3,"sources":["components/Heading.jsx","components/TimerController.jsx","components/Timer.jsx","components/Footer.jsx","components/App.jsx","index.js"],"names":["Heading","TimerController","this","props","id","title","decrementButton","lengthID","length","incrementButton","className","onClick","name","icon","faArrowDown","faArrowUp","Component","Timer","timerTitle","timeLeftID","countdown","start_stopID","onPlayClick","timerState","faPlay","faPause","onResetClick","resetID","faRedo","audioState","faMusic","faVolumeMute","audioID","preload","src","ref","audioRef","Footer","accurateInterval","require","initialState","breakTime","sessionTime","timer","intervalID","audio","App","setBreakLength","event","state","currentTarget","setState","setSessionLength","minutes","Math","floor","seconds","beginCountDown","decrementTimer","phaseControl","timerControl","clear","buzzer","switchTimer","num","str","_timer","audioBeep","play","muteAudio","document","getElementById","muted","pause","currentTime","ReactDOM","render"],"mappings":"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","file":"static/js/main.ab5c6f16.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Heading() {\n  return <h1>Pomodoro Clock</h1>;\n}\n\nexport default Heading;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowDown, faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\n\nclass TimerController extends Component {\n  render() {\n    const {\n      id,\n      title,\n      decrementButton,\n      lengthID,\n      length,\n      incrementButton,\n    } = this.props;\n    return (\n      <div className='time-controller'>\n        <h2 id={id}>{title}</h2>\n        <div className='btn-level'>\n          <button onClick={this.props.onClick} id={decrementButton} name='-'>\n            <FontAwesomeIcon icon={faArrowDown} />\n          </button>\n          <h2 id={lengthID}>{length}</h2>\n          <button\n            onClick={this.props.onClick}\n            className='btn-level'\n            id={incrementButton}\n            name='+'\n          >\n            <FontAwesomeIcon icon={faArrowUp} />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TimerController;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faPause,\n  faRedo,\n  faMusic,\n  faVolumeMute,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Timer(props) {\n  return (\n    <div className='timer-wrapper'>\n      <h2 id={props.id}>{props.timerTitle}</h2>\n      <div className='countdown' id={props.timeLeftID}>\n        {props.countdown}\n      </div>\n      <div className='btn-level'>\n        <button id={props.start_stopID} onClick={props.onPlayClick}>\n          {props.timerState === \"stopped\" ? (\n            <FontAwesomeIcon icon={faPlay} />\n          ) : (\n            <FontAwesomeIcon icon={faPause} />\n          )}\n        </button>\n        <button onClick={props.onResetClick} id={props.resetID}>\n          <FontAwesomeIcon icon={faRedo} />\n        </button>\n        <span onClick={props.onClick}>\n          {props.audioState === \"on\" ? (\n            <FontAwesomeIcon icon={faMusic} />\n          ) : (\n            <FontAwesomeIcon icon={faVolumeMute} />\n          )}\n\n          <audio\n            id={props.audioID}\n            preload='auto'\n            src='https://goo.gl/65cBl1'\n            ref={props.audioRef}\n          ></audio>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Timer;\n","import React from \"react\";\n\nfunction Footer() {\n  return <footer>by Carolina</footer>;\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Heading from \"./Heading\";\nimport TimerController from \"./TimerController\";\nimport Timer from \"./Timer\";\nimport Footer from \"./Footer\";\nimport \"./App.css\";\n\nconst accurateInterval = require(\"accurate-interval\");\n\nconst initialState = {\n  timerTitle: \"Session\",\n  breakTime: 5,\n  sessionTime: 25,\n  timer: 1500,\n  timerState: \"stopped\",\n  intervalID: \"\",\n  audio: \"on\",\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  setBreakLength = (event) => {\n    const breakTime = this.state.breakTime;\n\n    if (event.currentTarget.name === \"-\") {\n      if (breakTime !== 1) {\n        this.setState({ breakTime: breakTime - 1 });\n      } else {\n        this.setState({ breakTime: 1 });\n      }\n    } else {\n      if (breakTime !== 60) {\n        this.setState({ breakTime: breakTime + 1 });\n      } else {\n        this.setState({ breakTime: 60 });\n      }\n    }\n  };\n\n  setSessionLength = (event) => {\n    const sessionTime = this.state.sessionTime;\n\n    if (event.currentTarget.name === \"-\") {\n      if (sessionTime !== 1) {\n        this.setState({\n          sessionTime: sessionTime - 1,\n          timer: (sessionTime - 1) * 60,\n        });\n      } else {\n        this.setState({ sessionTime: 1 });\n      }\n    } else {\n      if (sessionTime !== 60) {\n        this.setState({\n          sessionTime: sessionTime + 1,\n          timer: (sessionTime + 1) * 60,\n        });\n      } else {\n        this.setState({ sessionTime: 60 });\n      }\n    }\n    this.setState({});\n  };\n\n  countdown = () => {\n    let minutes = Math.floor(this.state.timer / 60);\n    let seconds = this.state.timer - minutes * 60;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    return minutes + \":\" + seconds;\n  };\n\n  beginCountDown = () => {\n    this.setState({\n      intervalID: accurateInterval(() => {\n        this.decrementTimer();\n        this.phaseControl();\n      }, 1000),\n    });\n  };\n\n  timerControl = () => {\n    if (this.state.timerState === \"stopped\") {\n      this.beginCountDown();\n      this.setState({ timerState: \"running\" });\n    } else {\n      this.setState({ timerState: \"stopped\" });\n      this.state.intervalID && this.state.intervalID.clear();\n    }\n  };\n\n  decrementTimer = () => {\n    this.setState({ timer: this.state.timer - 1 });\n  };\n\n  phaseControl = () => {\n    let timer = this.state.timer;\n    this.buzzer(timer);\n    if (timer < 0) {\n      if (this.state.timerTitle === \"Session\") {\n        return (\n          this.state.intervalID && this.state.intervalID.clear(),\n          this.beginCountDown(),\n          this.switchTimer(this.state.breakTime * 60, \"Break\")\n        );\n      } else {\n        return (\n          this.state.intervalID && this.state.intervalID.clear(),\n          this.beginCountDown(),\n          this.switchTimer(this.state.sessionTime * 60, \"Session\")\n        );\n      }\n    }\n  };\n\n  switchTimer = (num, str) => {\n    this.setState({\n      timer: num,\n      timerTitle: str,\n    });\n  };\n\n  buzzer = (_timer) => {\n    if (_timer === 0) {\n      this.audioBeep.play();\n    }\n  };\n\n  muteAudio = () => {\n    if (this.state.audio === \"on\") {\n      return (\n        document.getElementById(\"beep\").muted, this.setState({ audio: \"off\" })\n      );\n    } else {\n      return (\n        !document.getElementById(\"beep\").muted, this.setState({ audio: \"on\" })\n      );\n    }\n  };\n\n  onResetClick = () => {\n    this.setState(initialState);\n    this.state.intervalID && this.state.intervalID.clear();\n    this.audioBeep.pause();\n    this.audioBeep.currentTime = 0;\n  };\n\n  render() {\n    return (\n      <div>\n        <div className='container'>\n          <Heading />\n          <TimerController\n            onClick={this.setBreakLength}\n            id='break-label'\n            title='Break Length'\n            decrementButton='break-decrement'\n            incrementButton='break-increment'\n            lengthID='break-length'\n            length={this.state.breakTime}\n          />\n          <TimerController\n            onClick={this.setSessionLength}\n            id='session-label'\n            title='Session Length'\n            decrementButton='session-decrement'\n            incrementButton='session-increment'\n            lengthID='session-length'\n            length={this.state.sessionTime}\n          />\n          <div className='timer'>\n            <Timer\n              onPlayClick={this.timerControl}\n              onResetClick={this.onResetClick}\n              id='timer-label'\n              timerTitle={this.state.timerTitle}\n              timeLeftID='time-left'\n              countdown={this.countdown()}\n              start_stopID='start_stop'\n              timerState={this.state.timerState}\n              resetID='reset'\n              intervalID={this.state.intervalID}\n              onClick={this.muteAudio}\n              audioID='beep'\n              audioState={this.state.audio}\n              audioRef={(audio) => {\n                this.audioBeep = audio;\n              }}\n            />\n          </div>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}